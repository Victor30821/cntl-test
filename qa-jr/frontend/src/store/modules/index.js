import {
  toggleMenu,
  selectScreen,
  selectChildScreen,
  enableScreens
} from "./menu/action";
import {
  toggleVehicleStatusReportAutoRefresh
} from "./general/generalSlice";
import {
  loadKmReports,
  loadRoutesReports,
  getRoutesByFileRouteId,
  loadAllDriversReports,
  loadEventsReports,
  loadProductivityReports,
  loadDriversPerDayReports,
  loadChecklistReports,
  loadConsumptionMonthReports,
  loadMonthCostReports,
  loadFuelRegistersReports,
  loadDriversPerRouteReports,
  attachDriverToRoute,
  loadAuditTrackings,
  sendFileToEmail,
  getDriversAndAddresses,
  getSingleRouteByFilters,
} from "./reports";
import {
  loadUsers,
  createUser,
  loadProfileUser,
  updateUser,
  deleteUser,
  userChangeSelectors,
  editUserStatus,
} from "./users/action";
import {
  createClient,
  editClient,
  loadClients,
  updateClients,
  clientChangeOperationStates,
  clientChangeSelectors,
} from "./clients/action";
import {
  createPlace,
  editPlace,
  loadPlaces,
  updatePlaces,
  placeChangeOperationStates,
  placeChangeSelectors,
} from "./places/action";
import {
  createSolicitation,
  editSolicitation,
  setVehiclesToSolicitations,
  loadSolicitations,
  solicitationChangeOperationStates,
  solicitationChangeSelectors,
  updateSolicitations,
} from "./solicitations/action";
import {
   loadOrganization,
   updateOrganization,
   listOrganizations
} from "./organization/action";
import {
  login,
  logout,
  fetchLogoutSuccess,
  forgotPassword,
  recoverPassword,
  userChangeOperationStates,
  updateUserInSession,
} from "./auth/action";
import {
  changeMapConfiguration,
  getRoutesByFileId,
  setMapRoutes,
  setVehicle,
  searchAddress,
  searchAddressLatLng,
  setSearchedAddress,
  setSearchedAddressLatLng,
  searchAddreessFromZipCode,
  setRoute,
  searchVehicleAddress,
  searchAddressToRoute,
  getBestRoute,
  setBestRoute,
  searchMultiAddresses,
  searchAllAddressLatLng,
  searchAddressInfoWindow,
  mapChangeOperationStates,
} from "./map/action";

import {
  loadMapVehicles,
  loadVehicles,
  loadOneVehicle,
  updateVehicle,
  createVehicle,
  vehicleChangeOperationStates,
  setNotificationEvents,
  loadVehicleSpeed,
  loadVehicleIdle,
  loadVehicleSchedule,
  loadNotifications,
  loadVehicleKmEvent,
  saveMaxSpeed,
  saveSchedule,
  vehicleChangeSelectors,
  getVehiclesStage,
  updateVehicleStage,
  removeKmEvent,
  loadReportVehiclesStatus
} from "./vehicles/action";
import {
  loadCommands,
  createCommand,
  requestDeleteConfirmation,
  loadTrackersCommands,
  listTypeCommands
} from "./commands/action";
import {
  createFence,
  editFence,
  loadFences,
  fenceChangeOperationStates,
  updateFences
} from "./fences/action";
import {
  createDriver,
  editDriver,
  saveDefaultDriver,
  editDefaultDriver,
  removeDefaultDriver,
  loadDrivers,
  driverChangeOperationStates,
  getDriversByIds,
  updateDrivers,
  driverLoadSuccess,
  fetchAddDriver,
  deleteDrivers,
} from "./drivers/action";
import {
  createGroup,
  editGroup,
  editVehicleGroups,
  groupLoadTaggingByNameSuccess,
  loadGroups,
  deleteGroup,
  groupChangeOperationStates,
  getTaggingByFilters,
  editGroupName,
  getTaggingPayloadToEntity,
  getTaggingPayloadToGroups,
  getGroupsTagNamesToCreate,
  deleteVehiclesFromGroup,
  getGroupsTagNamesToDelete,
} from "./groups/action";
import {
  createFuelSupplie,
  fuelChangeOperationStates,
  fuelChangeSelectors
} from "./fuelSupplies/action";
import {
  trackerChangeOperationStates,
  trackerChangeSelectors,
  changeVehicleFromTracker,
  updateTracker,
  loadTrackers,
  loadOneTracker,
  sendSMS,
} from "./trackers/action";

import {
  loadLogisticsServices,
  deleteLogisticsServices,
  fetchLoadSuccess,
  logisticsChangeSelected,
  loadTypeServices,
  loadDestiny,
  createTypeService,
  logisticsChangeSelectors,
  fetchRemoveItemFromServiceDrivers,
  loadStopPlacesSelectors,
  setServicePlace,
  createLogisticService,
  setDriverDay,
  setPlaces,
  setSwitchGoingReturn,
  editLogisticService,
  getProgressLogisticsService,
  setStatusService,
  setServiceId,
  setInitialState,
  setActiveFitBounce,
  loadRouteMapVehicle,
  searchZipCodeException,
  setServicesException,
  setChangeSelectorDaysOfWeeks,
  setSwichManualDeparture,
  loadAllServiceLogistics
} from "./logistics/action";

import {
  loadOrganizationAchievements,
} from "./usageAchievement/action";

export {
  login,
  logout,
  fetchLogoutSuccess,
  forgotPassword,
  recoverPassword,
  userChangeOperationStates,
  updateUserInSession,
  toggleMenu,
  enableScreens,
  selectScreen,
  selectChildScreen,
  createFence,
  editFence,
  loadFences,
  fenceChangeOperationStates,
  updateFences,
  createDriver,
  editDriver,
  saveDefaultDriver,
  editDefaultDriver,
  removeDefaultDriver,
  loadDrivers,
  driverChangeOperationStates,
  updateDrivers,
  getDriversByIds,
  loadKmReports,
  loadRoutesReports,
  getRoutesByFileRouteId,
  loadAllDriversReports,
  loadEventsReports,
  loadProductivityReports,
  loadDriversPerDayReports,
  loadChecklistReports,
  loadConsumptionMonthReports,
  loadMonthCostReports,
  loadFuelRegistersReports,
  loadDriversPerRouteReports,
  createGroup,
  groupChangeOperationStates,
  getTaggingByFilters,
  editGroupName,
  changeMapConfiguration,
  getRoutesByFileId,
  setMapRoutes,
  setVehicle,
  getVehiclesStage,
  updateVehicleStage,
  searchAddress,
  searchAddressLatLng,
  setSearchedAddress,
  setSearchedAddressLatLng,
  setRoute,
  searchVehicleAddress,
  searchAddressToRoute,
  editGroup,
  editVehicleGroups,
  groupLoadTaggingByNameSuccess,
  loadGroups,
  deleteGroup,
  loadUsers,
  createUser,
  loadOrganization,
  loadMapVehicles,
  loadVehicles,
  loadOneVehicle,
  updateVehicle,
  createVehicle,
  vehicleChangeOperationStates,
  loadVehicleSpeed,
  loadVehicleIdle,
  loadVehicleSchedule,
  loadNotifications,
  loadVehicleKmEvent,
  saveSchedule,
  vehicleChangeSelectors,
  setNotificationEvents,
  saveMaxSpeed,
  loadProfileUser,
  updateUser,
  deleteUser,
  userChangeSelectors,
  editUserStatus,
  updateOrganization,
  createCommand,
  loadCommands,
  loadTrackersCommands,
  createFuelSupplie,
  fuelChangeOperationStates,
  fuelChangeSelectors,
  trackerChangeOperationStates,
  trackerChangeSelectors,
  loadTrackers,
  loadOneTracker,
  createClient,
  editClient,
  loadClients,
  updateClients,
  clientChangeOperationStates,
  clientChangeSelectors,
  searchAddreessFromZipCode,
  createPlace,
  editPlace,
  loadPlaces,
  updatePlaces,
  placeChangeOperationStates,
  placeChangeSelectors,
  getTaggingPayloadToGroups,
  getTaggingPayloadToEntity,
  getGroupsTagNamesToCreate,
  deleteVehiclesFromGroup,
  getGroupsTagNamesToDelete,
  loadLogisticsServices,
  deleteLogisticsServices,
  fetchLoadSuccess,
  logisticsChangeSelected,
  loadTypeServices,
  loadDestiny,
  createTypeService,
  logisticsChangeSelectors,
  driverLoadSuccess,
  fetchRemoveItemFromServiceDrivers,
  fetchAddDriver,
  loadStopPlacesSelectors,
  createSolicitation,
  editSolicitation,
  setVehiclesToSolicitations,
  loadSolicitations,
  solicitationChangeOperationStates,
  solicitationChangeSelectors,
  updateSolicitations,
  setServicePlace,
  createLogisticService,
  getBestRoute,
  setDriverDay,
  setBestRoute,
  changeVehicleFromTracker,
  updateTracker,
  searchMultiAddresses,
  setPlaces,
  setSwitchGoingReturn,
  listTypeCommands,
  editLogisticService,
  getProgressLogisticsService,
  setStatusService,
  setServiceId,
  setInitialState,
  listOrganizations,
  setActiveFitBounce,
  loadRouteMapVehicle,
  sendSMS,
  toggleVehicleStatusReportAutoRefresh,
  setChangeSelectorDaysOfWeeks,
  searchZipCodeException,
  setServicesException,
  removeKmEvent,
  attachDriverToRoute,
  loadReportVehiclesStatus,
  setSwichManualDeparture,
  loadAllServiceLogistics,
  searchAllAddressLatLng,
  mapChangeOperationStates,
  loadAuditTrackings,
  sendFileToEmail,
  deleteDrivers,
  loadOrganizationAchievements,
  searchAddressInfoWindow,
  requestDeleteConfirmation,
  getDriversAndAddresses,
  getSingleRouteByFilters,
};
